image: $CI_IMAGE

.ace: &ace
    tags: ['ace-x86_64']

.common_only: &common_only
    only:
        - main
        - merge_requests

.build:
    <<: *ace
    <<: *common_only
    stage: build
    variables:
        APP: app
        ELF_PREFIX: kenning-zephyr-runtime
        BOARDS: >
            nrf52840dk_nrf52840
            nrf52840dongle_nrf52840
            stm32f746g_disco
            hifive_unleashed
    before_script:
        - scripts/prepare_zephyr_env.sh
        - scripts/prepare_modules.sh
        - mkdir -p artifacts
        - source .venv/bin/activate
    script:
        - |
          if [ "$RUNTIME" != "stub" ]
          then
              RUNTIME_CONF="${RUNTIME}.conf"
          fi
          for BOARD in ${BOARDS}
          do
              west build -p always -b ${BOARD} ${APP} -- -DEXTRA_CONF_FILE=${RUNTIME_CONF}
              cp build/zephyr/zephyr.elf artifacts/${ELF_PREFIX}-${RUNTIME}-${BOARD}.elf
          done
    artifacts:
        paths:
            - artifacts/*.elf
        when: always

.build-demo:
    extends: .build
    variables:
        APP: demo_app
        ELF_PREFIX: kenning-zephyr-runtime-demo

variables:
    GIT_STRATEGY: clone

stages:
    - lint
    - build
    - tests

pre-commit:
    <<: *ace
    <<: *common_only
    stage: lint
    script:
        - pre-commit run --all-files

build-stub:
    extends: .build
    variables:
        RUNTIME: stub

build-tvm:
    extends: .build
    variables:
        RUNTIME: tvm

build-tflite:
    extends: .build
    variables:
        RUNTIME: tflite

build-demo-tvm:
    extends: .build-demo
    variables:
        RUNTIME: tvm

build-demo-tflite:
    extends: .build-demo
    variables:
        RUNTIME: tflite

build-repl:
    extends: .build
    script:
        - |
          for BOARD in ${BOARDS}
          do
              west build -p always -b ${BOARD} demo_app || true
              west build -t board-repl
              cp build/${BOARD}.repl artifacts/
          done
    artifacts:
        paths:
            - artifacts/*.repl
        when: always

test-demo:
    <<: *ace
    <<: *common_only
    stage: tests
    script:
        - python -m pytest -ra -vv --color=yes --report-log=log.json ./tests/demo/test_demo.py
    dependencies:
        - build-demo-tvm
        - build-demo-tflite
        - build-repl
    artifacts:
        paths:
            - log.json
        when: always

unit-tests:
    <<: *ace
    <<: *common_only
    stage: tests
    before_script:
        - scripts/prepare_zephyr_env.sh
        - source .venv/bin/activate
    script:
        - west twister -T tests -p unit_testing
    artifacts:
        paths:
            - twister-out/unit_testing/lib/kenning_inference_lib/**/*.log
        when: always

tuttest:
    <<: *ace
    <<: *common_only
    image: debian:bullseye
    stage: tests
    script:
        - DEBIAN_FRONTEND=noninteractive apt update -qqy && apt-get install -y sudo python3 python3-pip git colorized-logs
        - pip3 install git+https://github.com/antmicro/tuttest.git
        - ./scripts/test_readme.sh
