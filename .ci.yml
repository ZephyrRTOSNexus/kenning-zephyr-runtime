image: $CI_IMAGE

.ace: &ace
    tags: ['ace-x86_64']

.common_only: &common_only
    only:
        - main
        - merge_requests


.build: &build
    <<: *ace
    <<: *common_only
    stage: build
    before_script:
        - scripts/prepare_zephyr_env.sh
        - scripts/prepare_modules.sh
    script:
        - |
          if [ "$RUNTIME" != "stub" ]
          then
              RUNTIME_CONF="${RUNTIME}.conf"
          fi
          mkdir -p artifacts
          for BOARD in ${BOARDS}
          do
              west build -p always -b ${BOARD} app -- -DEXTRA_CONF_FILE=${RUNTIME_CONF}
              cp build/zephyr/zephyr.elf artifacts/kenning-zephyr-runtime-${BOARD}-${RUNTIME}.elf
          done
    artifacts:
        paths:
            - artifacts/*.elf
        when: always

variables:
    GIT_STRATEGY: clone
    BOARDS: >
        nrf52840dk_nrf52840
        nrf52840dongle_nrf52840
        stm32f746g_disco

stages:
    - lint
    - build
    - tests

pre-commit:
    <<: *ace
    <<: *common_only
    stage: lint
    script:
        - pre-commit run --all-files

build-stub:
    variables:
        RUNTIME: stub
    <<: *build

build-tvm:
    variables:
        RUNTIME: tvm
    <<: *build

build-tflite:
    variables:
        RUNTIME: tflite
    <<: *build

unit-tests:
    <<: *ace
    <<: *common_only
    stage: tests
    before_script:
        - scripts/prepare_zephyr_env.sh
    script:
        - west twister -T tests -p unit_testing
    artifacts:
        paths:
            - twister-out/unit_testing/lib/kenning_inference_lib/**/*.log
        when: always

unit-tests:
    <<: *ace
    <<: *common_only
    stage: tests
    before_script:
        - scripts/prepare_zephyr_env.sh
    script:
        - west twister -T tests -p unit_testing
    artifacts:
        paths:
            - twister-out/unit_testing/lib/kenning_inference_lib/**/*.log
        when: always

tuttest:
    <<: *ace
    <<: *common_only
    stage: tests
    script:
        - apt update -y && apt install -y sudo
        - ./scripts/test_readme.sh
